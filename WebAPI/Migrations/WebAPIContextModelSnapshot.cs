// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(WebAPIContext))]
    partial class WebAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChatListid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactIdA")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactIdB")
                        .HasColumnType("longtext");

                    b.Property<string>("MessagesId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ChatListid");

                    b.HasIndex("MessagesId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("WebAPI.Models.ChatList", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("ChatList");
                });

            modelBuilder.Entity("WebAPI.Models.Contact", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(0);

                    b.Property<string>("ContactId")
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(1);

                    b.Property<string>("Last")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Server")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "ContactId")
                        .HasName("PK_Contact");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("WebAPI.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MessageListId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("receiverId")
                        .HasColumnType("longtext");

                    b.Property<string>("senderId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MessageListId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("WebAPI.Models.MessageList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("MessageList");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Chat", b =>
                {
                    b.HasOne("WebAPI.Models.ChatList", null)
                        .WithMany("Chats")
                        .HasForeignKey("ChatListid");

                    b.HasOne("WebAPI.Models.MessageList", "Messages")
                        .WithMany()
                        .HasForeignKey("MessagesId");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebAPI.Models.Contact", b =>
                {
                    b.HasOne("WebAPI.Models.User", null)
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.Message", b =>
                {
                    b.HasOne("WebAPI.Models.MessageList", null)
                        .WithMany("Messages")
                        .HasForeignKey("MessageListId");
                });

            modelBuilder.Entity("WebAPI.Models.ChatList", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("WebAPI.Models.MessageList", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
