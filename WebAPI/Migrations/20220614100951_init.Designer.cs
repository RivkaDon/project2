// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(WebAPIContext))]
    [Migration("20220614100951_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChatListId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MessagesId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ChatListId");

                    b.HasIndex("ContactId");

                    b.HasIndex("MessagesId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("WebAPI.Models.ChatList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ChatList");
                });

            modelBuilder.Entity("WebAPI.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactListId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Last")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Server")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContactListId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("WebAPI.Models.ContactList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ContactList");
                });

            modelBuilder.Entity("WebAPI.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MessageListId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("MessageListId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("WebAPI.Models.MessageList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("MessageList");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChatsId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactsId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChatsId");

                    b.HasIndex("ContactsId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebAPI.Models.Chat", b =>
                {
                    b.HasOne("WebAPI.Models.ChatList", null)
                        .WithMany("Chats")
                        .HasForeignKey("ChatListId");

                    b.HasOne("WebAPI.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("WebAPI.Models.MessageList", "Messages")
                        .WithMany()
                        .HasForeignKey("MessagesId");

                    b.Navigation("Contact");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebAPI.Models.Contact", b =>
                {
                    b.HasOne("WebAPI.Models.ContactList", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ContactListId");
                });

            modelBuilder.Entity("WebAPI.Models.Message", b =>
                {
                    b.HasOne("WebAPI.Models.MessageList", null)
                        .WithMany("Messages")
                        .HasForeignKey("MessageListId");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.HasOne("WebAPI.Models.ChatList", "Chats")
                        .WithMany()
                        .HasForeignKey("ChatsId");

                    b.HasOne("WebAPI.Models.ContactList", "Contacts")
                        .WithMany()
                        .HasForeignKey("ContactsId");

                    b.Navigation("Chats");

                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("WebAPI.Models.ChatList", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("WebAPI.Models.ContactList", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("WebAPI.Models.MessageList", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
